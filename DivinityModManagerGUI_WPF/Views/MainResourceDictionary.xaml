<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:DivinityModManager.Views"
					xmlns:vm="clr-namespace:DivinityModManager.ViewModels;assembly=DivinityModManagerCore"
					xmlns:data="clr-namespace:DivinityModManager.Models;assembly=DivinityModManagerCore"
					xmlns:conv="clr-namespace:DivinityModManager.Converters"
					xmlns:dd="urn:gong-wpf-dragdrop"
					x:Name="MainResources"
					>
	<conv:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
	<conv:ModIsAvailableConverter x:Key="ModIsAvailableConverter" />

	<BitmapImage x:Key="SaveImage" UriSource="pack://application:,,,/DivinityModManagerCore;component/Resources/Save_16x.png" />
	<BitmapImage x:Key="SaveAsImage" UriSource="pack://application:,,,/DivinityModManagerCore;component/Resources/SaveAs_16x.png" />
	<BitmapImage x:Key="SaveDisabledImage" UriSource="pack://application:,,,/DivinityModManagerCore;component/Resources/SaveGrey_16x.png" />
	<BitmapImage x:Key="AddItemImage" UriSource="pack://application:,,,/DivinityModManagerCore;component/Resources/AddItem_16x.png" />
	<BitmapImage x:Key="ExportDataImage" UriSource="pack://application:,,,/DivinityModManagerCore;component/Resources/ExportData_16x.png" />

	<DataTemplate DataType="{x:Type data:DivinityProfileData}">
		<TextBlock Text="{Binding Name}" />
	</DataTemplate>
	<DataTemplate DataType="{x:Type data:DivinityLoadOrder}" >
		<TextBlock Text="{Binding Name}" />
	</DataTemplate>
	<!--<DataTemplate DataType="{x:Type data:DivinityModSeparator}">
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition Height="*" />
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>
			<Rectangle Fill="Orange" Opacity="0.2" IsHitTestVisible="False" />
			<TextBlock Text="Unordered Mods:" Background="Transparent" Margin="4" />
			<Separator BorderThickness="1" BorderBrush="Orange" Grid.Row="1" />
		</Grid>
	</DataTemplate>-->
	<DataTemplate DataType="{x:Type data:DivinityModDependencyData}">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="Auto" />
			</Grid.ColumnDefinitions>
			<Grid.Resources>
				<Style TargetType="{x:Type TextBlock}">
					<Style.Triggers>
						<DataTrigger Binding="{Binding Converter={StaticResource ModIsAvailableConverter}}" Value="True">
							<Setter Property="Foreground" Value="Green" />
						</DataTrigger>
						<DataTrigger Binding="{Binding Converter={StaticResource ModIsAvailableConverter}}" Value="False">
							<Setter Property="Foreground" Value="Red" />
							<Setter Property="FontWeight" Value="Bold" />
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</Grid.Resources>
			<TextBlock Text="{Binding Name}" />
			<TextBlock Text="{Binding Version.Version}" Grid.Column="1" Margin="4,0,0,0" />
		</Grid>
	</DataTemplate>
	<Style TargetType="{x:Type ListViewItem}">
		<Style.Resources>
			<LinearGradientBrush x:Key="ListItemHoverFill_Selected" EndPoint="0,1" StartPoint="0,0">
				<GradientStop Color="#FFD1FFD1" Offset="0"/>
				<GradientStop Color="#FFA3FFAB" Offset="1"/>
			</LinearGradientBrush>
		</Style.Resources>
	
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
		<Style.Triggers>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding IsEditorMod}" Value="True" />
					<Condition Binding="{Binding IsSelected}" Value="False" />
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="Background">
						<Setter.Value>
							<SolidColorBrush Color="Lime" Opacity="0.15" />
						</Setter.Value>
					</Setter>
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding IsEditorMod}" Value="True" />
					<Condition Binding="{Binding IsSelected}" Value="True" />
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="Background" Value="{StaticResource ListItemHoverFill_Selected}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
		</Style.Triggers>
	</Style>
	<Style TargetType="ListView" x:Key="ModOrderListView">
		<Setter Property="dd:DragDrop.IsDragSource" Value="True" />
		<Setter Property="dd:DragDrop.IsDropTarget" Value="True" />
	</Style>
	<GridView x:Key="ModGridView" x:Shared="False" AllowsColumnReorder="True">
		<GridView.ColumnHeaderContainerStyle>
			<Style TargetType="{x:Type GridViewColumnHeader}">
				<Setter Property="HorizontalContentAlignment" Value="Left" />
				<Setter Property="Margin" Value="4,0,0,0" />
			</Style>
		</GridView.ColumnHeaderContainerStyle>
		<GridView.Columns>
			<GridViewColumn Width="40">
				<GridViewColumn.Header>
					<TextBlock Text="#" />
				</GridViewColumn.Header>
				<GridViewColumn.CellTemplate>
					<DataTemplate>
						<TextBlock Text="{Binding Index}" Background="Transparent" Margin="2,0,2,0" />
					</DataTemplate>
				</GridViewColumn.CellTemplate>
			</GridViewColumn>
			<GridViewColumn Width="400">
				<GridViewColumn.Header>
					<TextBlock Text="Name" />
				</GridViewColumn.Header>
				<GridViewColumn.CellTemplate>
					<DataTemplate>
						<TextBlock Text="{Binding Name}" HorizontalAlignment="Stretch">
							<TextBlock.ToolTip>
								<StackPanel Orientation="Vertical" MaxWidth="700" >
									<TextBlock Text="{Binding Name}" FontWeight="Bold" />
									<TextBlock Text="{Binding Description}" TextWrapping="Wrap" Visibility="{Binding HasDescription, Converter={StaticResource BoolToVisibilityConverter}}" />
									<StackPanel Orientation="Vertical" Margin="2" Visibility="{Binding HasDependencies, Converter={StaticResource BoolToVisibilityConverter}}">
										<TextBlock Text="Dependencies:" FontWeight="Bold" />
										<ListBox ItemsSource="{Binding Dependencies}" Margin="0" Padding="0" BorderThickness="0" />
									</StackPanel>
								</StackPanel>
							</TextBlock.ToolTip>
						</TextBlock>
					</DataTemplate>
				</GridViewColumn.CellTemplate>
			</GridViewColumn>
			<GridViewColumn Width="80">
				<GridViewColumn.Header>
					<TextBlock Text="Version" />
				</GridViewColumn.Header>
				<GridViewColumn.CellTemplate>
					<DataTemplate>
						<TextBlock Text="{Binding Version.Version}" ToolTip="{Binding Version.Version}" />
					</DataTemplate>
				</GridViewColumn.CellTemplate>
			</GridViewColumn>
			<GridViewColumn Width="100">
				<GridViewColumn.Header>
					<TextBlock Text="Author" />
				</GridViewColumn.Header>
				<GridViewColumn.CellTemplate>
					<DataTemplate>
						<TextBlock Text="{Binding Author}" ToolTip="{Binding Author}" />
					</DataTemplate>
				</GridViewColumn.CellTemplate>
			</GridViewColumn>
		</GridView.Columns>
	</GridView>
	<GridView x:Key="InactiveModGridView" x:Shared="False" AllowsColumnReorder="True">
		<GridView.ColumnHeaderContainerStyle>
			<Style TargetType="{x:Type GridViewColumnHeader}">
				<Setter Property="HorizontalContentAlignment" Value="Left" />
				<Setter Property="Margin" Value="4,0,0,0" />
			</Style>
		</GridView.ColumnHeaderContainerStyle>
		<GridView.Columns>
			<GridViewColumn Width="400">
				<GridViewColumn.Header>
					<TextBlock Text="Name" />
				</GridViewColumn.Header>
				<GridViewColumn.CellTemplate>
					<DataTemplate>
						<TextBlock Text="{Binding Name}" />
					</DataTemplate>
				</GridViewColumn.CellTemplate>
			</GridViewColumn>
			<GridViewColumn Width="80">
				<GridViewColumn.Header>
					<TextBlock Text="Version" />
				</GridViewColumn.Header>
				<GridViewColumn.CellTemplate>
					<DataTemplate>
						<TextBlock Text="{Binding Version.Version}" />
					</DataTemplate>
				</GridViewColumn.CellTemplate>
			</GridViewColumn>
			<GridViewColumn Width="100">
				<GridViewColumn.Header>
					<TextBlock Text="Author" />
				</GridViewColumn.Header>
				<GridViewColumn.CellTemplate>
					<DataTemplate>
						<TextBlock Text="{Binding Author}" />
					</DataTemplate>
				</GridViewColumn.CellTemplate>
			</GridViewColumn>
		</GridView.Columns>
	</GridView>
</ResourceDictionary>