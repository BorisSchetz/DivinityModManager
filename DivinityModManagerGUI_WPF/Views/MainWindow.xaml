<reactiveui:ReactiveWindow
	x:Class="DivinityModManager.Views.MainWindow"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:ag="clr-namespace:WpfAutoGrid;assembly=WpfAutoGrid"
	xmlns:controls="clr-namespace:DivinityModManager.Controls"
	xmlns:conv="clr-namespace:DivinityModManager.Converters"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:data="clr-namespace:DivinityModManager.Models;assembly=DivinityModManagerCore"
	xmlns:dd="urn:gong-wpf-dragdrop"
	xmlns:local="clr-namespace:DivinityModManager.Views"
	xmlns:mbar="clr-namespace:AlertBarWpf;assembly=AlertBarWpf"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:reactiveui="http://reactiveui.net"
	xmlns:vm="clr-namespace:DivinityModManager.ViewModels"
	xmlns:xc="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
	Width="1400"
	Height="800"
	x:TypeArguments="vm:MainWindowViewModel"
	mc:Ignorable="d">
	<!--  d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True, Type=local:MainWindowDebugData}"  -->
	<Window.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="pack://application:,,,/DivinityModManager;component/Views/MainResourceDictionary.xaml" />
			</ResourceDictionary.MergedDictionaries>
			<DataTemplate x:Key="VerticalModLayout">
				<local:VerticalModLayout />
			</DataTemplate>
			<DataTemplate x:Key="HorizontalModLayout">
				<local:HorizontalModLayout />
			</DataTemplate>
			<Style x:Key="UpdateButtonStyle" TargetType="{x:Type Button}">
				<Setter Property="Background">
					<Setter.Value>
						<SolidColorBrush Color="{DynamicResource {x:Static SystemColors.GradientInactiveCaptionColorKey}}" />
					</Setter.Value>
				</Setter>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">
							<Border Background="{TemplateBinding Background}">
								<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					<Trigger Property="IsMouseOver" Value="True">
						<Setter Property="Background" Value="LightGreen" />
					</Trigger>
				</Style.Triggers>
			</Style>
			<DataTemplate x:Key="UpdatesButtonTemplate">
				<StackPanel x:Name="UpdateViewPanel" VerticalAlignment="Stretch">
					<Button
						x:Name="UpdateViewToggleButton"
						MinWidth="20"
						Margin="0"
						Padding="0"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Stretch"
						BorderThickness="0"
						Command="{Binding ToggleUpdatesViewCommand}"
						Style="{StaticResource UpdateButtonStyle}"
						ToolTip="Toggle the Mod Updates View">
						<Button.Content>
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								<TextBlock
									Padding="4,0"
									HorizontalAlignment="Center"
									VerticalAlignment="Center"
									Foreground="Black"
									Text="Updates:" />
								<controls:CircleDecorator
									x:Name="RedUpdateBackground"
									Grid.Column="1"
									Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
									Height="16"
									BorderBrush="DarkGray"
									BorderThickness="1">
									<controls:CircleDecorator.Background>
										<LinearGradientBrush>
											<GradientStop Offset="0.0" Color="LightGray" />
											<GradientStop Offset="1.0" Color="LightSlateGray" />
										</LinearGradientBrush>
									</controls:CircleDecorator.Background>
									<Label
										x:Name="UpdateCountTextBlock"
										Padding="1"
										HorizontalAlignment="Center"
										VerticalAlignment="Center"
										Content="{Binding ModUpdatesViewData.TotalUpdates, FallbackValue='0'}"
										FontFamily="Arial"
										FontSize="9"
										FontWeight="Bold"
										Foreground="Black"
										TextBlock.TextAlignment="Center" />
									<controls:CircleDecorator.ToolTip>
										<TextBlock>
											<Run Text="Total Pending Updates:" />
											<Run Text="{Binding ModUpdatesViewData.TotalUpdates}" /></TextBlock>
									</controls:CircleDecorator.ToolTip>
								</controls:CircleDecorator>
								<Image
									x:Name="ExpandImage"
									Grid.Column="3"
									RenderOptions.BitmapScalingMode="Fant"
									Source="{StaticResource ExpandDownImage}"
									Stretch="Uniform"
									StretchDirection="UpOnly" />
							</Grid>
						</Button.Content>
					</Button>
				</StackPanel>
				<DataTemplate.Triggers>
					<DataTrigger Binding="{Binding ModUpdatesAvailable}" Value="True">
						<Setter TargetName="RedUpdateBackground" Property="Background">
							<Setter.Value>
								<LinearGradientBrush>
									<GradientStop Offset="0.0" Color="IndianRed" />
									<GradientStop Offset="1.0" Color="Red" />
								</LinearGradientBrush>
							</Setter.Value>
						</Setter>
						<Setter TargetName="RedUpdateBackground" Property="BorderBrush" Value="#FFEE3D3D" />
						<Setter TargetName="UpdateCountTextBlock" Property="Foreground" Value="White" />
						<Setter TargetName="UpdateCountTextBlock" Property="FontWeight" Value="Bold" />
					</DataTrigger>
					<DataTrigger Binding="{Binding ModUpdatesAvailable}" Value="False">
						<Setter TargetName="RedUpdateBackground" Property="BorderBrush" Value="DarkGray" />
						<Setter TargetName="RedUpdateBackground" Property="Background" Value="LightGray" />
						<Setter TargetName="UpdateCountTextBlock" Property="Foreground" Value="Black" />
						<Setter TargetName="UpdateCountTextBlock" Property="FontWeight" Value="Normal" />
					</DataTrigger>
					<DataTrigger Binding="{Binding ModUpdatesViewVisible}" Value="True">
						<Setter TargetName="UpdateViewPanel" Property="Background" Value="LightBlue" />
					</DataTrigger>
					<DataTrigger Binding="{Binding ModUpdatesViewVisible}" Value="False">
						<Setter TargetName="UpdateViewPanel" Property="Background" Value="Transparent" />
					</DataTrigger>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding ModUpdatesViewVisible}" Value="False" />
							<Condition Binding="{Binding ModUpdatesAvailable}" Value="True" />
						</MultiDataTrigger.Conditions>
						<MultiDataTrigger.Setters>
							<Setter TargetName="ExpandImage" Property="Source" Value="{StaticResource ExpandDownImage}" />
						</MultiDataTrigger.Setters>
					</MultiDataTrigger>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding ModUpdatesViewVisible}" Value="True" />
							<Condition Binding="{Binding ModUpdatesAvailable}" Value="True" />
						</MultiDataTrigger.Conditions>
						<MultiDataTrigger.Setters>
							<Setter TargetName="ExpandImage" Property="Source" Value="{StaticResource ExpandUpImage}" />
						</MultiDataTrigger.Setters>
					</MultiDataTrigger>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding ModUpdatesViewVisible}" Value="False" />
							<Condition Binding="{Binding ModUpdatesAvailable}" Value="False" />
						</MultiDataTrigger.Conditions>
						<MultiDataTrigger.Setters>
							<Setter TargetName="ExpandImage" Property="Source" Value="{StaticResource ExpandDownImageDisabled}" />
						</MultiDataTrigger.Setters>
					</MultiDataTrigger>
				</DataTemplate.Triggers>
			</DataTemplate>
		</ResourceDictionary>
	</Window.Resources>
	<Window.InputBindings>
		<KeyBinding
			Key="Z"
			Command="{Binding UndoCommand}"
			Modifiers="Ctrl" />
		<KeyBinding
			Key="Z"
			Command="{Binding RedoCommand}"
			Modifiers="Ctrl+Alt" />
		<KeyBinding
			Key="Y"
			Command="{Binding RedoCommand}"
			Modifiers="Ctrl" />
		<KeyBinding
			Key="D"
			Command="{Binding DebugCommand}"
			Modifiers="Ctrl" />
		<KeyBinding
			Key="S"
			Command="{Binding SaveOrderCommand}"
			Modifiers="Ctrl" />
	</Window.InputBindings>
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>
		<Grid>
			<Grid.Background>
				<SolidColorBrush Color="{DynamicResource {x:Static SystemColors.GradientInactiveCaptionColorKey}}" />
			</Grid.Background>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="1" />
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>
			<Menu x:Name="TopMenuBar" Padding="2">
				<MenuItem Header="File" />
				<MenuItem Header="Settings">
					<MenuItem
						x:Name="Settings_Preferences_MenuItem"
						Click="Settings_Preferences_MenuItem_Click"
						Header="Preferences" />
				</MenuItem>
				<!--<MenuItem Header="Tools">
				<MenuItem x:Name="ConflictCheckerMenuItem" Header="Conflict Checker" />
			</MenuItem>-->
			</Menu>
			<StackPanel
				Grid.Column="2"
				HorizontalAlignment="Left"
				VerticalAlignment="Center"
				Orientation="Horizontal">
				<ContentControl
					HorizontalAlignment="Left"
					VerticalAlignment="Center"
					Content="{Binding}"
					ContentTemplate="{StaticResource UpdatesButtonTemplate}"
					IsEnabled="{Binding ModUpdatesAvailable, Mode=OneWay, FallbackValue=false}" />
			</StackPanel>

		</Grid>
		<Grid
			Grid.Row="1"
			Grid.RowSpan="2"
			Panel.ZIndex="99"
			Background="LightBlue"
			Visibility="{Binding ModUpdatesViewVisible, Converter={StaticResource BoolToVisibilityConverter}, FallbackValue='Collapsed'}">
			<local:ModUpdatesLayout DataContext="{Binding ModUpdatesViewData}" />
		</Grid>
		<Grid Grid.Row="1" Margin="4">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>
				<TextBlock
					Margin="0,0,4,0"
					VerticalAlignment="Center"
					Text="Profile" />
				<ComboBox
					x:Name="ProfilesComboBox"
					Grid.Column="1"
					MinWidth="100"
					MinHeight="16"
					HorizontalAlignment="Stretch"
					VerticalAlignment="Center"
					DisplayMemberPath="Name"
					IsTextSearchEnabled="False"
					ItemsSource="{Binding Profiles}"
					SelectedIndex="{Binding SelectedProfileIndex}" />
			</Grid>
			<Grid Grid.Column="1" Margin="4,0">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>
				<TextBlock
					Margin="0,0,4,0"
					VerticalAlignment="Center"
					Text="Mod Order" />
				<ComboBox
					x:Name="OrdersComboBox"
					Grid.Column="1"
					MinWidth="100"
					MinHeight="16"
					HorizontalAlignment="Stretch"
					VerticalAlignment="Center"
					DisplayMemberPath="Name"
					IsEditable="True"
					IsTextSearchEnabled="True"
					ItemsSource="{Binding ModOrderList}"
					KeyDown="ComboBox_KeyDown_LoseFocus"
					SelectedIndex="{Binding SelectedModOrderIndex}"
					Text="{Binding SelectedModOrder.Name, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" />
			</Grid>
			<Grid Grid.Column="2" Margin="1,0,0,0">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>
				<Grid.Resources>
					<Style BasedOn="{StaticResource IconButtonStyle}" TargetType="Button" />
				</Grid.Resources>
				<StackPanel Orientation="Horizontal">
					<Button x:Name="AddNewOrderButton" ToolTip="Add New Load Order">
						<controls:AutoGrayableImage Source="{StaticResource AddItemImage}" />
					</Button>
					<Button x:Name="SaveButton" ToolTip="Save Load Order to File">
						<Button.Resources>
							<Style TargetType="{x:Type Image}">
								<Style.Triggers>
									<Trigger Property="IsEnabled" Value="True">
										<Setter Property="Source" Value="{StaticResource SaveImage}" />
									</Trigger>
									<Trigger Property="IsEnabled" Value="False">
										<Setter Property="Source" Value="{StaticResource SaveDisabledImage}" />
									</Trigger>
								</Style.Triggers>
							</Style>
						</Button.Resources>
						<Image
							Width="16"
							Height="16"
							Stretch="Uniform" />
					</Button>
					<Button x:Name="SaveAsButton" ToolTip="Save Order As...">
						<controls:AutoGrayableImage Source="{StaticResource SaveAsImage}" />
					</Button>
				</StackPanel>
				<Rectangle Grid.Column="1" Style="{StaticResource VerticalSeparator}" />
				<StackPanel Grid.Column="2" Orientation="Horizontal">
					<TextBlock
						Margin="0,0,6,0"
						VerticalAlignment="Center"
						Text="Export to Game" />
					<Button x:Name="ExportToModSettingsButton" ToolTip="Export Load Order to Game for the Current Profile">
						<controls:AutoGrayableImage Source="{StaticResource ExportDataImage}" />
					</Button>
					<Rectangle Style="{StaticResource VerticalSeparator}" />
					<Label Content="Refresh" />
					<Button x:Name="RefreshButton" ToolTip="Refresh Mods and Workshop Updates">
						<controls:AutoGrayableImage Source="{StaticResource RefreshImage}" />
					</Button>
					<Rectangle Margin="16,0,8,0" Style="{StaticResource VerticalSeparator}" />
					<Label Content="Shortcuts" />
					<Button x:Name="OpenModsFolderButton" ToolTip="Open Mods Folder">
						<controls:AutoGrayableImage Source="{StaticResource OpenFolderImage}" />
					</Button>
					<Button x:Name="OpenWorkshopFolderButton" ToolTip="Open DOS2 Workshop Folder">
						<controls:AutoGrayableImage Source="{StaticResource OpenSteamWorkshopFolderImage}" />
					</Button>
					<Button x:Name="OpenDOS2GameButton" ToolTip="Run Divinity: Original Sin 2 - Definitive Edition">
						<controls:AutoGrayableImage Source="{StaticResource OpenDOS2Image}" />
					</Button>
				</StackPanel>
			</Grid>
		</Grid>
		<ContentControl
			x:Name="LayoutContent"
			Grid.Row="2"
			Content="{Binding}">
			<ContentControl.Style>
				<Style TargetType="{x:Type ContentControl}">
					<Style.Triggers>
						<DataTrigger Binding="{Binding LayoutMode}" Value="0">
							<Setter Property="ContentTemplate" Value="{StaticResource HorizontalModLayout}" />
						</DataTrigger>
						<DataTrigger Binding="{Binding LayoutMode}" Value="1">
							<Setter Property="ContentTemplate" Value="{StaticResource VerticalModLayout}" />
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</ContentControl.Style>
		</ContentControl>
		<StatusBar Grid.Row="3" MinHeight="16">
			<StatusBarItem HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
				<mbar:AlertBarWpf x:Name="AlertBar" Theme="Outline" />
				<!--<TextBox
					HorizontalAlignment="Stretch"
					Background="Transparent"
					BorderThickness="0"
					IsReadOnly="True"
					Text="{Binding StatusText}" />-->
			</StatusBarItem>
		</StatusBar>
	</Grid>
</reactiveui:ReactiveWindow>
