<reactiveui:ReactiveWindow 
		x:Class="DivinityModManager.Views.MainWindow"
		x:TypeArguments="vm:MainWindowViewModel"
		xmlns:reactiveui="http://reactiveui.net"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DivinityModManager.Views"
        xmlns:controls="clr-namespace:DivinityModManager.Controls"
        xmlns:conv="clr-namespace:DivinityModManager.Converters"
        xmlns:vm="clr-namespace:DivinityModManager.ViewModels"
        xmlns:data="clr-namespace:DivinityModManager.Models;assembly=DivinityModManagerCore"
		xmlns:dd="urn:gong-wpf-dragdrop"
		xmlns:ag="clr-namespace:WpfAutoGrid;assembly=WpfAutoGrid"
        mc:Ignorable="d"
        Height="800" Width="1400"
>
	<!--d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True, Type=local:MainWindowDebugData}"-->
	<Window.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="pack://application:,,,/DivinityModManager;component/Views/MainResourceDictionary.xaml" />
			</ResourceDictionary.MergedDictionaries>
			<DataTemplate x:Key="VerticalModLayout">
				<local:VerticalModLayout />
			</DataTemplate>
			<DataTemplate x:Key="HorizontalModLayout">
				<local:HorizontalModLayout/>
			</DataTemplate>
		</ResourceDictionary>
	</Window.Resources>
	<Window.InputBindings>
		<KeyBinding Key="Z" Modifiers="Ctrl" Command="{Binding UndoCommand}" />
		<KeyBinding Key="Z" Modifiers="Ctrl+Alt" Command="{Binding RedoCommand}" />
		<KeyBinding Key="Y" Modifiers="Ctrl" Command="{Binding RedoCommand}" />
		<KeyBinding Key="D" Modifiers="Ctrl" Command="{Binding DebugCommand}" />
		<KeyBinding Key="S" Modifiers="Ctrl" Command="{Binding SaveOrderCommand}" />
	</Window.InputBindings>
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>
		<Grid>
			<Grid.Background>
				<SolidColorBrush Color="{DynamicResource {x:Static SystemColors.GradientInactiveCaptionColorKey}}"/>
			</Grid.Background>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="1" />
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>
			<Menu x:Name="TopMenuBar" Padding="2">
				<MenuItem Header="File"></MenuItem>
				<MenuItem Header="Settings">
					<MenuItem x:Name="Settings_Preferences_MenuItem" Header="Preferences" Click="Settings_Preferences_MenuItem_Click" />
				</MenuItem>
				<!--<MenuItem Header="Tools">
				<MenuItem x:Name="ConflictCheckerMenuItem" Header="Conflict Checker" />
			</MenuItem>-->
			</Menu>
			<StackPanel Grid.Column="2" Orientation="Horizontal" VerticalAlignment="Center" IsEnabled="{Binding ModUpdatesAvailable, Mode=OneWay, FallbackValue=false}">
				<StackPanel.Resources>
					<Style x:Key="UpdateButtonStyle" TargetType="{x:Type Button}">
						<Setter Property="Background">
							<Setter.Value>
								<SolidColorBrush Color="{DynamicResource {x:Static SystemColors.GradientInactiveCaptionColorKey}}"/>
							</Setter.Value>
						</Setter>
						<Style.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Background" Value="LightGreen" />
							</Trigger>
						</Style.Triggers>
					</Style>
					<DataTemplate x:Key="UpdatesButtonTemplate">
						<StackPanel x:Name="UpdateViewPanel" VerticalAlignment="Stretch">
							<Button Command="{Binding ToggleUpdatesViewCommand}" MinWidth="20" BorderThickness="0" x:Name="UpdateViewToggleButton"
										 ToolTip="Toggle the Mod Updates View" Padding="0" Margin="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
									Style="{StaticResource UpdateButtonStyle}"
										>
								<Button.Content>
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="*" />
										</Grid.ColumnDefinitions>
										<TextBlock Text="Updates:" VerticalAlignment="Center" HorizontalAlignment="Center" Padding="4,0" Foreground="Black" />
										<controls:CircleDecorator Grid.Column="1"
													Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
													Height="16"
													x:Name="RedUpdateBackground" 
													BorderBrush="DarkGray" BorderThickness="1" >
											<controls:CircleDecorator.Background>
												<LinearGradientBrush>
													<GradientStop Color="LightGray" Offset="0.0"/>
													<GradientStop Color="LightSlateGray" Offset="1.0" />
												</LinearGradientBrush>
											</controls:CircleDecorator.Background>
											<Label x:Name="UpdateCountTextBlock" Content="{Binding ModUpdatesViewData.TotalUpdates, FallbackValue='0'}"
														FontSize="9" Padding="1" FontWeight="Bold" FontFamily="Arial" Foreground="Black"
														VerticalAlignment="Center" HorizontalAlignment="Center" TextBlock.TextAlignment="Center" />
											<controls:CircleDecorator.ToolTip>
												<TextBlock>
																	<Run Text="Total Pending Updates:" />
																	<Run Text="{Binding ModUpdatesViewData.TotalUpdates}" /></TextBlock>
											</controls:CircleDecorator.ToolTip>
										</controls:CircleDecorator>
									</Grid>
								</Button.Content>
							</Button>
						</StackPanel>
						<DataTemplate.Triggers>
							<DataTrigger Binding="{Binding ModUpdatesAvailable}" Value="True">
								<Setter Property="Background" TargetName="RedUpdateBackground">
									<Setter.Value>
										<LinearGradientBrush>
											<GradientStop Color="IndianRed" Offset="0.0"/>
											<GradientStop Color="Red" Offset="1.0" />
										</LinearGradientBrush>
									</Setter.Value>
								</Setter>
								<Setter Property="BorderBrush" TargetName="RedUpdateBackground" Value="#FFEE3D3D"/>
								<Setter Property="Foreground" TargetName="UpdateCountTextBlock" Value="White"/>
								<Setter Property="FontWeight" TargetName="UpdateCountTextBlock" Value="Bold"/>
							</DataTrigger>
							<DataTrigger Binding="{Binding ModUpdatesAvailable}" Value="False">
								<Setter Property="BorderBrush" TargetName="RedUpdateBackground" Value="DarkGray"/>
								<Setter Property="Background" TargetName="RedUpdateBackground" Value="LightGray"/>
								<Setter Property="Foreground" TargetName="UpdateCountTextBlock" Value="Black"/>
								<Setter Property="FontWeight" TargetName="UpdateCountTextBlock" Value="Normal"/>
							</DataTrigger>
							<DataTrigger Binding="{Binding ModUpdatesViewVisible}" Value="True">
								<Setter Property="Background" TargetName="UpdateViewPanel" Value="LightBlue"/>
							</DataTrigger>
							<DataTrigger Binding="{Binding ModUpdatesViewVisible}" Value="False">
								<Setter Property="Background" TargetName="UpdateViewPanel" Value="Transparent"/>
							</DataTrigger>
						</DataTemplate.Triggers>
					</DataTemplate>
				</StackPanel.Resources>
				<ContentControl ContentTemplate="{StaticResource UpdatesButtonTemplate}" Content="{Binding}" />
			</StackPanel>
		</Grid>
		<Grid Grid.Row="1" Grid.RowSpan="2" Background="LightBlue" Panel.ZIndex="99" 
			  Visibility="{Binding ModUpdatesViewVisible, Converter={StaticResource BoolToVisibilityConverter}, FallbackValue='Collapsed'}" >
			<local:ModUpdatesLayout DataContext="{Binding ModUpdatesViewData}" />
		</Grid>
		<Grid Grid.Row="1" Margin="4">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>
				<TextBlock Text="Profile" VerticalAlignment="Center" Margin="0,0,4,0" />
				<ComboBox x:Name="ProfilesComboBox" DisplayMemberPath="Name" ItemsSource="{Binding Profiles}" SelectedIndex="{Binding SelectedProfileIndex}"
						  Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Stretch" MinWidth="100" MinHeight="16" 
						  IsTextSearchEnabled="False"
				/>
			</Grid>
			<Grid Margin="4,0" Grid.Column="1">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>
				<TextBlock Text="Mod Order" VerticalAlignment="Center" Margin="0,0,4,0" />
				<ComboBox x:Name="OrdersComboBox" Grid.Column="1" ItemsSource="{Binding ModOrderList}" SelectedIndex="{Binding SelectedModOrderIndex}"
						  VerticalAlignment="Center" HorizontalAlignment="Stretch" MinWidth="100" MinHeight="16" DisplayMemberPath="Name"
						  Text="{Binding SelectedModOrder.Name, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" IsEditable="True" IsTextSearchEnabled="True" KeyDown="ComboBox_KeyDown_LoseFocus"
						  
				/>
			</Grid>
			<Grid Grid.Column="2" Margin="1,0,0,0">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="10" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>
				<StackPanel Orientation="Horizontal">
					<Button x:Name="AddNewOrderButton" ToolTip="Add New Load Order">
						<controls:AutoGrayableImage Width="16" Height="16" Stretch="UniformToFill" Source="{StaticResource AddItemImage}"/>
					</Button>
					<Button x:Name="SaveButton" ToolTip="Save Load Order to File" Margin="8,0,0,0">
						<Button.Resources>
							<Style TargetType="{x:Type Image}">
								<Style.Triggers>
									<Trigger Property="IsEnabled" Value="True">
										<Setter Property="Source" Value="{StaticResource SaveImage}" />
									</Trigger>
									<Trigger Property="IsEnabled" Value="False">
										<Setter Property="Source" Value="{StaticResource SaveDisabledImage}" />
									</Trigger>
								</Style.Triggers>
							</Style>
						</Button.Resources>
						<Image Width="16" Height="16" Stretch="UniformToFill" />
					</Button>
					<Button x:Name="SaveAsButton" ToolTip="Save Order As...">
						<controls:AutoGrayableImage Width="16" Height="16" Stretch="UniformToFill" Source="{StaticResource SaveAsImage}"/>
					</Button>
				</StackPanel>
				<StackPanel Grid.Column="2" Orientation="Horizontal" Margin="21,0,0,0">
					<TextBlock Text="Export to Game" VerticalAlignment="Center" Margin="4,0"/>
					<Button x:Name="ExportToModSettingsButton" ToolTip="Export Load Order to Game for the Current Profile">
						<controls:AutoGrayableImage Width="16" Height="16" Stretch="UniformToFill" Source="{StaticResource ExportDataImage}"/>
					</Button>
				</StackPanel>
			</Grid>
		</Grid>
		<ContentControl x:Name="LayoutContent" Grid.Row="2" Content="{Binding}">
			<ContentControl.Style>
				<Style TargetType="{x:Type ContentControl}">
					<Style.Triggers>
						<DataTrigger Binding="{Binding LayoutMode}" Value="0">
							<Setter Property="ContentTemplate" Value="{StaticResource HorizontalModLayout}" />
						</DataTrigger>
						<DataTrigger Binding="{Binding LayoutMode}" Value="1">
							<Setter Property="ContentTemplate" Value="{StaticResource VerticalModLayout}" />
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</ContentControl.Style>
		</ContentControl>
		<StatusBar Grid.Row="3">
			<StatusBarItem HorizontalAlignment="Stretch">
				<TextBox Text="{Binding StatusText}" IsReadOnly="True" BorderThickness="0" Background="Transparent" HorizontalAlignment="Stretch" />
			</StatusBarItem>
		</StatusBar>
	</Grid>
</reactiveui:ReactiveWindow>
